{"version":3,"sources":["../src/node/cli.ts","../src/node/server/index.ts","../src/node/optimizer/index.ts","../src/node/constants.ts","../src/node/optimizer/scanPlguin.ts","../src/node/optimizer/preBundlePlugin.ts","../src/node/utils/index.ts"],"sourcesContent":["// src/node/cli.ts\nimport cac from \"cac\";\nimport { startDevServer } from \"./server\";\n\nconst cli = cac();\n\n// [] ‰∏≠ÁöÑÂÜÖÂÆπ‰∏∫ÂèØÈÄâÂèÇÊï∞Ôºå‰πüÂ∞±ÊòØËØ¥‰ªÖËæìÂÖ• `vite` ÂëΩ‰ª§‰∏ã‰ºöÊâßË°å‰∏ãÈù¢ÁöÑÈÄªËæë\ncli\n  .command(\"[root]\", \"Run the development server\")\n  .alias(\"serve\")\n  .alias(\"dev\")\n  .action(async () => {\n    await startDevServer();\n  });\n\ncli.help();\n\ncli.parse();\n","// connect ÊòØ‰∏Ä‰∏™ÂÖ∑Êúâ‰∏≠Èó¥‰ª∂Êú∫Âà∂ÁöÑËΩªÈáèÁ∫ß Node.js Ê°ÜÊû∂„ÄÇ\n// Êó¢ÂèØ‰ª•ÂçïÁã¨‰Ωú‰∏∫ÊúçÂä°Âô®Ôºå‰πüÂèØ‰ª•Êé•ÂÖ•Âà∞‰ªª‰ΩïÂÖ∑Êúâ‰∏≠Èó¥‰ª∂Êú∫Âà∂ÁöÑÊ°ÜÊû∂‰∏≠ÔºåÂ¶Ç Koa„ÄÅExpress\nimport connect from \"connect\";\n// picocolors ÊòØ‰∏Ä‰∏™Áî®Êù•Âú®ÂëΩ‰ª§Ë°åÊòæÁ§∫‰∏çÂêåÈ¢úËâ≤ÊñáÊú¨ÁöÑÂ∑•ÂÖ∑\nimport { blue, green } from \"picocolors\";\nimport { optimize } from \"../optimizer\";\n\nexport async function startDevServer() {\n  const app = connect();\n  const root = process.cwd();\n  const startTime = Date.now();\n  app.listen(3000, async () => {\n    await optimize(root)\n    console.log(\n      green(\"üöÄ No-Bundle ÊúçÂä°Â∑≤ÁªèÊàêÂäüÂêØÂä®!\"),\n      `ËÄóÊó∂: ${Date.now() - startTime}ms`\n    );\n    console.log(`> Êú¨Âú∞ËÆøÈóÆË∑ØÂæÑ: ${blue(\"http://localhost:3000\")}`);\n  });\n}\n\nexport interface ServerContext {}\n","import path from 'path'\nimport { build } from 'esbuild'\nimport { green } from \"picocolors\";\n\nimport { scanPlugin } from \"../optimizer/scanPlguin\";\nimport { PRE_BUNDLE_DIR } from '../constants'\nimport { preBundlePlugin } from \"./preBundlePlugin\";\n\nexport async function optimize(root: string) {\n\n  // 1. Á°ÆÂÆöÂÖ•Âè£\n  // 2. ‰ªéÂÖ•Âè£Â§ÑÊâ´Êèè‰æùËµñ\n  // 3. È¢ÑÊûÑÂª∫‰æùËµñ\n  const entry = path.resolve(root, 'src/main.tsx')\n  const deps = new Set<string>();\n  await build({\n    entryPoints: [entry],\n    bundle: true,\n    write: false,\n    plugins: [scanPlugin(deps)],\n  });\n  console.log(\n    `${green(\"ÈúÄË¶ÅÈ¢ÑÊûÑÂª∫ÁöÑ‰æùËµñ\")}:\\n${[...deps]\n      .map(green)\n      .map((item) => `  ${item}`)\n      .join(\"\\n\")}`\n  );\n\n\n  // 3. È¢ÑÊûÑÂª∫‰æùËµñ\n  await build({\n    entryPoints: [...deps],\n    write: true,\n    bundle: true,\n    format: \"esm\",\n    splitting: true,\n    outdir: path.resolve(root, PRE_BUNDLE_DIR),\n    plugins: [preBundlePlugin(deps)],\n  });\n\n}\n","import path from 'path'\nexport const EXTERNAL_TYPES = [\n  \"css\",\n  \"less\",\n  \"sass\",\n  \"scss\",\n  \"styl\",\n  \"stylus\",\n  \"pcss\",\n  \"postcss\",\n  \"vue\",\n  \"svelte\",\n  \"marko\",\n  \"astro\",\n  \"png\",\n  \"jpe?g\",\n  \"gif\",\n  \"svg\",\n  \"ico\",\n  \"webp\",\n  \"avif\",\n];\n\nexport const BARE_IMPORT_RE = /^[\\w@][^:]/;\n// È¢ÑÊûÑÂª∫‰∫ßÁâ©ÈªòËÆ§Â≠òÊîæÂú® node_modules ‰∏≠ÁöÑ .m-vite ÁõÆÂΩï‰∏≠\nexport const PRE_BUNDLE_DIR = path.join(\"node_modules\", \".m-vite\")","import { Plugin } from 'esbuild'\nimport { BARE_IMPORT_RE, EXTERNAL_TYPES } from '../constants'\nexport function scanPlugin(deps: Set<string>): Plugin {\n    return {\n        name: 'esbuild:scan-deps',\n        // ÂøΩÁï•ÁöÑÊñá‰ª∂Á±ªÂûã\n        setup(build) {\n            build.onResolve(\n                { filter: new RegExp(`\\\\.(${EXTERNAL_TYPES.join(\"|\")})$`) },\n                (resolveInfo) => {\n                    return {\n                        path: resolveInfo.path,\n                        // Êâì‰∏ä external Ê†áËÆ∞\n                        external: true,\n                    };\n                }\n            ),\n            build.onResolve({\n                filter: BARE_IMPORT_RE\n            },\n                (resolveInfo) => {\n                    const { path: id } = resolveInfo;\n                    // Êé®ÂÖ• deps ÈõÜÂêà‰∏≠\n                    deps.add(id);\n                    return {\n                        path: id,\n                        external: true,\n                    };\n                }\n            )\n        },\n    }\n}","import { Loader, Plugin } from \"esbuild\";\nimport { BARE_IMPORT_RE } from \"../constants\";\nimport { init, parse } from \"es-module-lexer\";\nimport path from \"path\";\nimport resolve from \"resolve\";\nimport fs from \"fs-extra\";\nimport createDebug from \"debug\";\nimport { normalizePath } from \"../utils\";\n\nconst debug = createDebug(\"dev\");\n\nexport function preBundlePlugin(deps: Set<string>): Plugin {\n  return {\n    name: \"esbuild:pre-bundle\",\n    setup(build) {\n      build.onResolve(\n        {\n          filter: BARE_IMPORT_RE,\n        },\n        (resolveInfo) => {\n          const { path: id, importer } = resolveInfo;\n          const isEntry = !importer;\n          // ÂëΩ‰∏≠ÈúÄË¶ÅÈ¢ÑÁºñËØëÁöÑ‰æùËµñ\n          if (deps.has(id)) {\n            // Ëã•‰∏∫ÂÖ•Âè£ÔºåÂàôÊ†áËÆ∞ dep ÁöÑ namespace\n            return isEntry\n              ? {\n                  path: id,\n                  namespace: \"dep\",\n                }\n              : {\n                  // Âõ†‰∏∫Ëµ∞Âà∞ onResolve ‰∫ÜÔºåÊâÄ‰ª•ËøôÈáåÁöÑ path Â∞±ÊòØÁªùÂØπË∑ØÂæÑ‰∫Ü\n                  path: resolve.sync(id, { basedir: process.cwd() }),\n                };\n          }\n        }\n      );\n\n      // ÊãøÂà∞Ê†áËÆ∞ÂêéÁöÑ‰æùËµñÔºåÊûÑÈÄ†‰ª£ÁêÜÊ®°ÂùóÔºå‰∫§Áªô esbuild ÊâìÂåÖ\n      build.onLoad(\n        {\n          filter: /.*/,\n          namespace: \"dep\",\n        },\n        async (loadInfo) => {\n          await init;\n          const id = loadInfo.path;\n          const root = process.cwd();\n          const entryPath = normalizePath(resolve.sync(id, { basedir: root }));\n          const code = await fs.readFile(entryPath, \"utf-8\");\n          const [imports, exports] = await parse(code);\n          let proxyModule = [];\n          // cjs\n          if (!imports.length && !exports.length) {\n            const res = require(entryPath);\n            const specifiers = Object.keys(res);\n            proxyModule.push(\n              `export { ${specifiers.join(\",\")} } from \"${entryPath}\"`,\n              `export default require(\"${entryPath}\")`\n            );\n          } else {\n            if (exports.includes(\"default\")) {\n              proxyModule.push(`import d from \"${entryPath}\";export default d`);\n            }\n            proxyModule.push(`export * from \"${entryPath}\"`);\n          }\n          debug(\"‰ª£ÁêÜÊ®°ÂùóÂÜÖÂÆπ: %o\", proxyModule.join(\"\\n\"));\n          const loader = path.extname(entryPath).slice(1);\n          return {\n            loader: loader as Loader,\n            contents: proxyModule.join(\"\\n\"),\n            resolveDir: root,\n          };\n        }\n      );\n    },\n  };\n}","import os from 'os'\nimport path from 'path'\n//ÂÖºÂÆπwindosÂ§ÑÁêÜ\nexport function slash(p: string): string {\n    return p.replace(/\\\\/g, \"/\");\n}\n\n\nexport const isWindows = os.platform() === \"win32\";\n\n\nexport function normalizePath(id: string): string {\n    return path.posix.normalize(isWindows ? slash(id) : id);\n}"],"mappings":"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","names":["import_picocolors","import_path","path","build","import_path","import_path","os","path","createDebug","build","resolve","fs","exports","path","path","connect","cac"]}